#!/bin/bash
# Development environment setup script for SIMD-LOB

set -e

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

echo "=== SIMD-LOB Development Environment Setup ==="
echo "Project root detected at: $PROJECT_ROOT"

# Check if .env exists
ENV_FILE="$PROJECT_ROOT/.env"
if [ -f "$ENV_FILE" ]; then
    echo "✓ .env file already exists"
    
    # Ask if user wants to regenerate
    read -p "Do you want to regenerate the .env file? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Keeping existing .env file"
    else
        echo "Regenerating .env file..."
        rm "$ENV_FILE"
    fi
fi

# Create .env file if it doesn't exist
if [ ! -f "$ENV_FILE" ]; then
    echo "Creating .env file..."
    
    # Get user input for customization
    echo "Please provide configuration (press Enter for defaults):"
    
    read -p "Project root [$PROJECT_ROOT]: " USER_PROJECT_ROOT
    USER_PROJECT_ROOT=${USER_PROJECT_ROOT:-$PROJECT_ROOT}
    
    read -p "Build type [Release]: " USER_BUILD_TYPE
    USER_BUILD_TYPE=${USER_BUILD_TYPE:-Release}
    
    read -p "Default pool size [1000000]: " USER_POOL_SIZE
    USER_POOL_SIZE=${USER_POOL_SIZE:-1000000}
    
    read -p "Enable SIMD optimizations [ON]: " USER_ENABLE_SIMD
    USER_ENABLE_SIMD=${USER_ENABLE_SIMD:-ON}
    
    read -p "Build scalar baseline [ON]: " USER_BUILD_SCALAR
    USER_BUILD_SCALAR=${USER_BUILD_SCALAR:-ON}
    
    # Create .env file with user input
    cat > "$ENV_FILE" << EOF
# SIMD-LOB Environment Configuration
# Generated by setup_dev_env.sh on $(date)

# Project root directory
PROJECT_ROOT=$USER_PROJECT_ROOT

# Build directory
BUILD_DIR=\${PROJECT_ROOT}/build

# Source directory
SRC_DIR=\${PROJECT_ROOT}/src

# Test directory
TEST_DIR=\${PROJECT_ROOT}/tests

# Benchmark directory
BENCH_DIR=\${PROJECT_ROOT}/bench

# Scalar baseline directory
SCALAR_DIR=\${BENCH_DIR}/scalar

# Test executables paths
BITSET_TEST_EXEC=\${BUILD_DIR}/test_bitset_directory
ORDER_BOOK_TEST_EXEC=\${BUILD_DIR}/test_order_book
LOB_ENGINE_TEST_EXEC=\${BUILD_DIR}/test_lob_engine
SCALAR_TEST_EXEC=\${BUILD_DIR}/bench/scalar/test_scalar
ALL_TESTS_EXEC=\${BUILD_DIR}/run_all_tests

# Build configuration
CMAKE_BUILD_TYPE=$USER_BUILD_TYPE
ENABLE_SIMD=$USER_ENABLE_SIMD
BUILD_SCALAR_BASELINE=$USER_BUILD_SCALAR

# Performance testing configuration
DEFAULT_POOL_SIZE=$USER_POOL_SIZE
BENCHMARK_ITERATIONS=10000
WARMUP_ITERATIONS=1000

# Compiler flags
CXX_FLAGS="-O3 -march=native -mavx2"
SCALAR_CXX_FLAGS="-O2"

# Output directories
RESULTS_DIR=\${PROJECT_ROOT}/results
LOGS_DIR=\${PROJECT_ROOT}/logs

# Data directories for benchmarks
DATA_DIR=\${BENCH_DIR}/data
SYNTHETIC_DATA_DIR=\${DATA_DIR}/synthetic
REAL_DATA_DIR=\${DATA_DIR}/real
EOF

    echo "✓ .env file created successfully"
fi

# Create necessary directories
echo ""
echo "Creating project directories..."
mkdir -p "$PROJECT_ROOT/results"
mkdir -p "$PROJECT_ROOT/logs"
mkdir -p "$PROJECT_ROOT/bench/data/synthetic"
mkdir -p "$PROJECT_ROOT/bench/data/real"

echo "✓ Directories created"

# Make scripts executable
echo ""
echo "Making scripts executable..."
chmod +x "$SCRIPT_DIR"/*.sh
echo "✓ Scripts made executable"

# Load and display environment
echo ""
echo "Loading environment..."
source "$SCRIPT_DIR/load_env.sh"

echo ""
echo "=== Setup Complete ==="
echo ""
echo "Next steps:"
echo "1. Run: source ./scripts/load_env.sh  (to load environment in current shell)"
echo "2. Run: ./scripts/build_and_test.sh   (to build and test the project)"
echo "3. Edit .env file if you need to customize paths or settings"
echo ""
echo "Environment variables are now configured for:"
echo "  - Consistent build paths"
echo "  - Flexible test execution"
echo "  - Benchmark configuration"
echo "  - Development workflow"